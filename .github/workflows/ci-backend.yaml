name: CI backend
on:
  push:
    branches:
    - main
  pull_request:
    paths:
    - 'backend/**'
    - '**/ci-backend.yaml'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: ${{ github.ref_name != 'main' }}

permissions:
  contents: read
  pull-requests: read

defaults:
  run:
    working-directory: ./backend

env:
  FORCE_COLOR: 1
  CI: true
  PYTHON_VERSION: 3.13

jobs:
  quality-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Set up uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
        enable-cache: true
        cache-dependency-glob: "**/dev*.txt"

    - name: Install dependencies
      run: uv pip install --system -r requirements/dev.txt

    - name: Check formatting
      run: ruff format --check

    - name: Check linting
      run: ruff check

  test-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: setup python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Set up uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
        enable-cache: true
        cache-dependency-glob: "**/requirements*.txt"

    - name: Install dependencies
      run: uv pip install --system -r requirements/requirements.txt

    - name: Setup database
      run: docker compose -f docker-compose.yml up -d

    - name: Setup migrations & load data
      run: |
        python3 ./manage.py migrate
        python3 ./manage.py loaddata --format json ./fixtures/dev-fixtures.json

    - name: Run tests
      run: python3 ./manage.py test
