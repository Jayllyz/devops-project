name: CD Frontend
on:
  push:
    branches:
    - main
    tags:
    - 'v*'
    paths:
    - 'frontend/**'
    - 'k8s/frontend/**'
    - '**/cd-frontend.yaml'
  pull_request:
    paths:
    - 'frontend/**'
    - '**/cd-frontend.yaml'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: ${{ github.ref_name != 'main' }}

defaults:
  run:
    shell: bash
    working-directory: ./frontend

env:
  FORCE_COLOR: 1
  CI: true

jobs:
  build-image:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      packages: write
    outputs:
      image-tag: ${{ steps.image-tag.outputs.image-tag }}

    steps:
    - name: 📦 Checkout Repository
      id: checkout
      uses: actions/checkout@v4
      with:
        persist-credentials: false

    - name: 🛠️ Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v3

    - name: 🛠️ Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3

    - name: 🏷️ Login to GHCR
      id: login_ghcr
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: 🔖 Docker meta
      id: docker_meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}/frontend
        flavor: latest=auto
        tags: |
          type=raw,value=latest,enable={{is_default_branch}},priority=300
          type=semver,pattern={{version}},priority=100
          type=semver,pattern={{major}}.{{minor}},priority=90
          type=semver,pattern={{major}},priority=80
          type=ref,event=tag,priority=200

    - name: 🐳 Docker Build and Push
      id: build_image
      uses: docker/build-push-action@v6
      with:
        platforms: linux/amd64
        context: ./frontend
        file: frontend/Dockerfile
        target: prod
        builder: ${{ steps.buildx.outputs.name }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
        provenance: true
        sbom: true

  deploy:
    needs: build-image
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        persist-credentials: false

    - name: Install kubectl
      uses: azure/setup-kubectl@v4

    - name: Configure kubectl
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
        chmod 600 ~/.kube/config

    - name: Deploy Frontend
      env:
        NAMESPACE: groupe4-al1
      run: |
        kubectl get namespace $NAMESPACE || kubectl create namespace $NAMESPACE
        kubectl apply -f k8s/frontend/deployment.yaml
        kubectl apply -f k8s/frontend/gateway.yaml
        kubectl apply -f k8s/frontend/service.yaml
        kubectl rollout restart deployment frontend
